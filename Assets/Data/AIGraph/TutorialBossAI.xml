<AIGraph Name="TutorialBossAI" DefaultState="H_Judge_AttackSTD">

    <Include Path="TutorialBoss/H_ATK_F_ChargeThrust.xml"/>
    <Include Path="TutorialBoss/H_DEF_ActionGuard.xml"/>
    <Include Path="TutorialBoss/H_DEF_MoveDodge.xml"/>
    <Include Path="TutorialBoss/H_END_Dead.xml"/>
    <Include Path="TutorialBoss/H_STA_Hit.xml"/>
    <Include Path="TutorialBoss/H_Judge_AttackByDistance.xml"/>
    <Include Path="TutorialBoss/H_Judge_AttackByRandom.xml"/>
    <Include Path="TutorialBoss/H_Judge_AttackSTD.xml"/>
    <Include Path="TutorialBoss/H_Judge_AttackDelay.xml"/>
    <Include Path="TutorialBoss/H_MIX_C_RushNCaseShot.xml"/>
    <Include Path="TutorialBoss/H_MIX_C_SwingComboNCaseShot.xml"/>
    <Include Path="TutorialBoss/H_MIX_C_ThrustComboNCaseShot.xml"/>
    <Include Path="TutorialBoss/H_MOV_Alert.xml"/>
    <Include Path="TutorialBoss/H_SHT_C_Gatling3NSpear.xml"/>
    <Include Path="TutorialBoss/H_SHT_F_ChargeSpear.xml"/>
    <Include Path="TutorialBoss/H_SHT_N_DefenseShot.xml"/>
    <Include Path="TutorialBoss/H_STA_Defenseless.xml"/>


    <BranchSet Name="IsHitBranchSet">
       <!--  <Branch Condition="getStat_IsHit >= 1.0" Execute="H_STA_Hit"/> -->
       <Branch Condition="Hit == true" Execute="H_STA_Hit"/>
       <Branch Condition="getStat_HP <= 0.0" Execute="H_END_Dead"/>
    </BranchSet>
    
    <BranchSet Name="IsDefenselessBranchSet">
        <Branch Condition="AttackParried == true" Execute="H_STA_Defenseless"/>
        <Branch Condition="GuardBroken == true" Execute="H_STA_Defenseless"/>
    </BranchSet>
    
    <BranchSet Name="IsDefensibleBranchSet">
        <Branch Condition="getTargetFrameTag_Attack && (TargetDistance < 3.0) && (getStat_Stamina >= 30.0)" Execute="H_DEF_MoveDodge"/>
        <Branch Condition="getTargetFrameTag_Attack && (TargetDistance < 3.0) && (getStat_Stamina < 30.0)" Execute="H_DEF_ActionGuard"/>
    </BranchSet>
    
    <H_Judge_AttackDelay>
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="true" Weight="RandBoolean^True" Execute="H_MOV_Alert"/>
        <Branch Condition="true" Weight="RandBoolean^False" Execute="H_Judge_AttackSTD"/>
    </H_Judge_AttackDelay> 

    <H_Judge_AttackSTD Package="H_Judge_AttackSTD">
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        
        <Branch Weight="TutorialBossJudgeAttackSTD^ByDistance" Execute="H_Judge_AttackByDistance"/>
        <Branch Weight="TutorialBossJudgeAttackSTD^ByRandom" Execute="H_Judge_AttackByRandom"/>
    </H_Judge_AttackSTD>

    <GlobalVariable Name="gv_NearDist" Value="1.5"/>
    <GlobalVariable Name="gv_CommonDist" Value="4.0"/>
    <GlobalVariable Name="gv_FarDist" Value="5.0"/>
    <H_Judge_AttackByDistance Package="H_Judge_AttackByDistance">
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="CurrentPackageEnd && (TargetDistance <= gv_CommonDist)" Weight="RandBoolean^True" Execute="H_MOV_Alert"/>
        <!-- <Branch Condition="CurrentPackageEnd && (TargetDistance <= gv_NearDist)" Weight="TutorialBossJudgeNearAttack^H_SHT_N_DefenseShot" Execute="H_SHT_N_DefenseShot"/> -->
        <!-- <Branch Condition="CurrentPackageEnd && ((gv_NearDist < TargetDistance) && (TargetDistance <= gv_CommonDist))" Weight="TutorialBossJudgeCommonAttack^H_MIX_C_RushNCaseShot" Execute="H_MIX_C_RushNCaseShot"/> -->
        <!-- <Branch Condition="CurrentPackageEnd && ((gv_NearDist < TargetDistance) && (TargetDistance <= gv_CommonDist))" Weight="TutorialBossJudgeCommonAttack^H_MIX_C_SwingComboNCaseShot" Execute="H_MIX_C_SwingComboNCaseShot"/> -->
        <Branch Condition="CurrentPackageEnd && (TargetDistance <= gv_CommonDist)" Weight="TutorialBossJudgeCommonAttack^H_MIX_C_ThrustComboNCaseShot" Execute="H_MIX_C_ThrustComboNCaseShot"/>
        <!-- <Branch Condition="CurrentPackageEnd && ((gv_NearDist < TargetDistance) && (TargetDistance <= gv_CommonDist))" Weight="TutorialBossJudgeCommonAttack^H_SHT_C_Gatling3NSpear" Execute="H_SHT_C_Gatling3NSpear"/> -->
        <Branch Condition="CurrentPackageEnd && ((gv_CommonDist < TargetDistance) && (TargetDistance <= gv_FarDist))" Weight="TutorialBossJudgeFarAttack^H_ATK_F_ChargeThrust" Execute="H_ATK_F_ChargeThrust"/>
        <!-- <Branch Condition="CurrentPackageEnd && ((gv_CommonDist < TargetDistance) && (TargetDistance <= gv_FarDist))" Weight="TutorialBossJudgeFarAttack^H_SHT_F_ChargeSpear" Execute="H_SHT_F_ChargeSpear"/> -->
        
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackByDistance"/>
        <!-- -->
    </H_Judge_AttackByDistance>
    
    <H_Judge_AttackByRandom Package="H_Judge_AttackByRandom"> 
        <UseBranchSet Name="IsHitBranchSet"/>
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_Judge_AttackByRandom>

    <H_SHT_N_DefenseShot Package="H_SHT_N_DefenseShot">
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_SHT_N_DefenseShot>

    <H_MIX_C_RushNCaseShot Package="H_MIX_C_RushNCaseShot">
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_MIX_C_RushNCaseShot>

    <H_MIX_C_SwingComboNCaseShot Package="H_MIX_C_SwingComboNCaseShot">
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_MIX_C_SwingComboNCaseShot>

    <H_MIX_C_ThrustComboNCaseShot Package="H_MIX_C_ThrustComboNCaseShot">
        <UseBranchSet Name="IsDefenselessBranchSet"/>
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_MIX_C_ThrustComboNCaseShot>

    <H_SHT_C_Gatling3NSpear Package="H_SHT_C_Gatling3NSpear">
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_SHT_C_Gatling3NSpear>
    
    <H_ATK_F_ChargeThrust Package="H_ATK_F_ChargeThrust">
        <UseBranchSet Name="IsDefenselessBranchSet"/>
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_ATK_F_ChargeThrust>

    <H_SHT_F_ChargeSpear Package="H_SHT_F_ChargeSpear">
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_SHT_F_ChargeSpear>
    
    <H_MOV_Alert Package="H_MOV_Alert">
        <UseBranchSet Name="IsHitBranchSet"/>
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_MOV_Alert>

    <H_DEF_ActionGuard Package="H_DEF_ActionGuard">
        <UseBranchSet Name="IsDefenselessBranchSet"/>
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>

        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_DEF_ActionGuard>

    <H_DEF_MoveDodge Package="H_DEF_MoveDodge"> 
        <UseBranchSet Name="IsDefensibleBranchSet"/>
        <UseBranchSet Name="IsHitBranchSet"/>
        
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_DEF_MoveDodge>

    <H_STA_Defenseless Package="H_STA_Defenseless">
        <UseBranchSet Name="IsHitBranchSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_STA_Defenseless>

    <H_STA_Hit Package="H_STA_Hit">
        <Branch Condition="(getStat_HP == 7.0)" Execute="H_SHT_N_DefenseShot"/>
        <Branch Condition="(getStat_HP == 4.0)" Execute="H_SHT_N_DefenseShot"/>
        <Branch Condition="(getStat_HP == 1.0)" Execute="H_SHT_N_DefenseShot"/>
        <Branch Condition="CurrentPackageEnd && (getStat_HP <= 0.0)" Execute="H_END_Dead"/>
        <Branch Condition="CurrentPackageEnd" Execute="H_Judge_AttackSTD"/>
    </H_STA_Hit>

    <H_END_Dead Package="H_END_Dead">
        
    </H_END_Dead>

</AIGraph>