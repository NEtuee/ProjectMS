<AIGraph Name="ReitoChanAI" DefaultState="Entry">
    <!-- 옵션 설정 -->
    <!-- 공격 거리 설정 -->
    <GlobalVariable Name="gv_MeleeAttackRangeMin"           Value="0.0"/>       <!-- 최소 공격 사거리 : Value보다 PC가 가까우면 공격하지 않는다. -->
    <GlobalVariable Name="gv_MeleeAttackRangeMax"           Value="2.0"/>       <!-- 최대 사거리 : Value보다 PC가 멀면 추격이동으로 이행한다. -->

    <!-- 가드 옵션 설정 -->
    <GlobalVariable Name="gv_GuardTime"                     Value="3.0"/>       <!-- 방어 지속 시간 -->
    <GlobalVariable Name="gv_GuardBrokenThreshold"          Value="3.0"/>       <!-- 가드 브레이크 공격을 막을 수 있는 횟수 -->
    <!-- 이동 타입 설정 -->
    <GlobalVariable Name="gv_bIsSystemChase"                Value="True"/>     <!-- 시스템 추격: 일정 거리 이상일 시 PC로 워프한다. (카메라 밖에서 동작) -->
    <GlobalVariable Name="gv_bIsDash"                       Value="True"/>     <!-- 시스템 추격: 일정 거리 이상일 시 PC로 워프한다. (카메라 밖에서 동작) -->
    <!-- 이동 거리 설정 -->
    <GlobalVariable Name="gv_SystemChaseThreshold"          Value="9.75"/>     <!-- 시스템 추격 거리: 카메라 범위 값. 카메라 바깥으로 사라지지 않게 추격 -->
    <GlobalVariable Name="gv_MoveThreshold"                 Value="3.0"/>       <!-- 최대 거리 : PC와 Value 이상 거리가 벌어진 경우 이동한다. -->
    <GlobalVariable Name="gv_StopThreshold"                 Value="2.7"/>       <!-- 최소 거리 : PC와 Value 이상 거리가 가까워진 경우 정지 또는 경계한다. -->
    <GlobalVariable Name="gv_AwayThreshold"                 Value="1.5"/>       <!-- 최소 거리 : PC와 Value 이상 거리가 가까워진 경우 거리를 벌린다. -->
    <!-- 패시브 방어 반응 임계치 설정 -->
    <GlobalVariable Name="gv_HitCountThreshold"             Value="5.0"/>       <!-- 누적 피격 횟수 트리거 : 해당 횟수 충족 시 패시브 방어 동작 (가드를 제외한 모든 피격 카운트) -->
    <GlobalVariable Name="gv_GuardCountThreshold"           Value="2.0"/>       <!-- 누적 가드 횟수 트리거 : 해당 횟수 충족 시 패시브 방어 동작 (가드 중 모든 피격 시 카운트) -->
    <!-- 패시브 방어(누적 피격) 반응 타입 설정 -->
        <!-- TODO: 피격 리액션이 상황에 따라 다른 것으로 실행될 수 있음. 복수 선택 가능하게. -->
    <GlobalVariable Name="gv_bIsDodgeToPassiveDef_Hit"      Value="True"/>      <!-- 누적 피격 시 패시브 방어 : 회피 타입 -->
    <GlobalVariable Name="gv_bIsCounterToPassiveDef_Hit"    Value="False"/>      <!-- 누적 피격 시 패시브 방어 : 반격 타입 -->
    <GlobalVariable Name="gv_bIsGuardToPassiveDef_Hit"      Value="False"/>      <!-- 누적 피격 시 패시브 방어 : 방어 타입 -->
    <!-- 패시브 방어(누적 가드) 반응 타입 설정 -->
    <GlobalVariable Name="gv_bIsDodgeToPassiveDef_Guard"    Value="False"/>      <!-- 누적 피격 시 패시브 방어 : 회피 타입 -->
    <GlobalVariable Name="gv_bIsCounterToPassiveDef_Guard"  Value="False"/>     <!-- 누적 피격 시 패시브 방어 : 반격 타입 -->
    <!-- 패시브 방어 실행 지연 시간 설정 -->
    <GlobalVariable Name="gv_PassiveDef_Hit_DelayTime" Value="0.0"/>            <!-- 누적 피격 반응 지연 시간-->
    <GlobalVariable Name="gv_PassiveDef_Guard_DelayTime" Value="0.1"/>            <!-- 누적 가드 반응 지연 시간-->

    <Include Path="Assets/Data/AILibrary/Package/CommonTestPackage.xml"/>

    <Include Path="Assets/Data/AILibrary/Package/CommonDeadPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonHitPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonChasePackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonSystemChasePackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonAttackPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonIdlePackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonGuardBrokenPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonRunawayPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonGroggyPackage.xml"/>
    <Include Path="Assets/Data/AILibrary/Package/CommonDashPackage.xml"/>

    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoPunchPackage.xml"/>
    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoSpwanGauntletPackage.xml"/>
    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoCremationBeamPackage.xml"/>
    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoDodgePackage.xml"/>
    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoAttackReadyPackage.xml"/>
    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoChaseAttackReadyPackage.xml"/>
    <Include Path="Assets/Data/Character/Boss/KantoReito/ReitoLinearDashPackage.xml"/>

    <Test Package="CommonTestPackage">
        <Branch Condition="CurrentPackageEnd" Execute="Test"/>
    </Test>

    <!-- Std Values -->
    <GlobalVariable Name="gv_StdDistance" Value="2.0"/>     <!-- 원거리 공격 기준 값 -->
    <GlobalVariable Name="gv_StdPassiveAttitude" Value="4.0"/>     <!-- 장외 기준 값 -->
    <!-- Custom Value -->
    <CustomValue Name="CurrentGauntletCount" Value="0.0"/>

    <CustomEvent_CountGauntlet>
        <AIEvent Type="AddCustomValue" Name="CurrentGauntletCount" Value="1.0"/>
    </CustomEvent_CountGauntlet>
    <CustomEvent_DiscountGauntlet>
        <AIEvent Type="AddCustomValue" Name="CurrentGauntletCount" Value="-1.0"/>
    </CustomEvent_DiscountGauntlet>

    <!-- Dodge Pattern -->
    <GlobalVariable Name="gv_najimiHitCountFast" Value="1.0"/>      <!-- 나지미 피격 허용 횟수 (빠름)-->
    <GlobalVariable Name="gv_najimiHitCountNormal" Value="2.0"/>    <!-- 나지미 피격 허용 횟수 (보통)-->
    <GlobalVariable Name="gv_najimiHitCountSlow" Value="3.0"/>      <!-- 나지미 피격 허용 횟수 (느림)-->

    <!-- Rush Pattern -->
    <GlobalVariable Name="gv_najimiRushRange" Value="2.0"/>             <!-- 나지미 돌진 사거리 -->
    <GlobalVariable Name="gv_najimiRushTrasitionTime" Value="0.8"/>     <!-- 나지미 돌진 최소 텀 -->
    
    <!-- Gauntlet -->
    <GlobalVariable Name="gv_GuntletLimit" Value="0.0"/>

    <!-- Groggy Pattern -->
    <GlobalVariable Name="gv_najimiStdBattle" Value="20.0"/>     <!-- 나지미 그로기 기준 배틀 포인트 -->

    <!-- BranchSet -->
    <BranchSet Name="IsPlayerDead">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="getTargetFrameTag_Dead" Execute="EnemyWin"/>
    </BranchSet>

    <!-- 피격 리액션 브랜치 셋 -->
    <BranchSet Name="HitReactionSet">
        <Branch Condition="Dead" Execute="Dead"/>
        <Branch Condition="(getStat_Battle >= gv_najimiStdBattle)" Execute="Groggy"/>
        <Branch Weight="NajimiJudgeDodge^Fast" Condition="(Hit || GuardBreakFail || GuardBroken) && (getStat_HitCount >= gv_najimiHitCountFast)" Execute="JudgeHitReaction"/> <!-- Attack 프레임 태그로 바꿀까.-->
        <Branch Weight="NajimiJudgeDodge^Normal" Condition="(Hit || GuardBreakFail || GuardBroken) && (getStat_HitCount >= gv_najimiHitCountNormal)" Execute="JudgeHitReaction"/>
        <Branch Weight="NajimiJudgeDodge^Slow" Condition="(Hit || GuardBreakFail || GuardBroken) && (getStat_HitCount >= gv_najimiHitCountSlow)" Execute="JudgeHitReaction"/>
        <Branch Condition="Hit && getFrameTag_HitAvail" Execute="Hit"/>
        <Branch Condition="(GuardBreakFail || GuardBroken) && getFrameTag_GbAvail" Execute="GuardBroken"/>
    </BranchSet>

    <Entry Package="CommonIdlePackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="TargetDistance >= gv_SystemChaseThreshold" Execute="SystemChase"/>
        <Branch Condition="true" Execute="JudgeDistance"/>
    </Entry>

    <!-- 거리 판단 -->
    <JudgeDistance Package="CommonIdlePackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <Branch Condition="TargetDistance >= gv_SystemChaseThreshold" Execute="SystemChase"/>
        
        <!-- 장외 거리 분기 -->
        <Branch Condition="(TargetDistance >= gv_StdPassiveAttitude) && (customValue_CurrentGauntletCount <= gv_GuntletLimit)" Execute="SpawnPitchingMachine"/>
        <Branch Condition="(TargetDistance >= gv_StdPassiveAttitude)" Execute="DashRush"/>

        <!-- 근거리 -->
        <Branch Weight="RandBoolean^True" Condition="(TargetDistance < gv_StdDistance)" Execute="RushReady"/>
        <Branch Weight="RandBoolean^False" Condition="(TargetDistance < gv_StdDistance) && (customValue_CurrentGauntletCount <= gv_GuntletLimit)" Execute="SpawnPitchingMachine"/>
        <Branch Weight="RandBoolean^False" Condition="(TargetDistance < gv_StdDistance)" Execute="RushReady"/>

        <!-- 원거리 -->
        <Branch Weight="Najimi2PhaseDistAtk^ChaseRush" Condition="(TargetDistance >= gv_StdDistance)" Execute="Chase"/>
        <Branch Weight="Najimi2PhaseDistAtk^PitchingMachine" Condition="(TargetDistance >= gv_StdDistance) && (customValue_CurrentGauntletCount <= gv_GuntletLimit)" Execute="SpawnPitchingMachine"/>
        <Branch Weight="Najimi2PhaseDistAtk^PitchingMachine" Condition="(TargetDistance >= gv_StdDistance)" Execute="DashRush"/>
        <Branch Weight="Najimi2PhaseDistAtk^Pitching" Condition="(TargetDistance >= gv_StdDistance)" Execute="Pitching"/>
        <Branch Weight="Najimi2PhaseDistAtk^DashRush" Condition="(TargetDistance >= gv_StdDistance)" Execute="DashRush"/>
    </JudgeDistance>

    <!-- 피격 리액션 판단 -->
    <JudgeHitReaction Package="CommonIdlePackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <!-- 회피 -->
        <Branch Weight="NajimiHitReaction^Dodge" Condition="true" Execute="Dodge"/>

        <!-- 제자리 반격 -->
        <Branch Weight="NajimiHitReaction^Attack" Condition="true" Execute="RushReady"/>
    </JudgeHitReaction>

    <Dodge Package="ReitoDodgePackage">      
        <UseBranchSet Name="IsPlayerDead"/>  
        <!-- 대시 공격 -->
        <Branch Weight="NajimiDodgeAtk^DashAttack" Condition="CurrentPackageEnd" Execute="DashRush"/>
        <!-- 거리 기반 공격 -->
        <Branch Weight="NajimiDodgeAtk^DistAttack" Condition="CurrentPackageEnd" Execute="JudgeDistance"/>
    </Dodge>

    <Chase Package="CommonChasePackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="TargetDistance >= gv_SystemChaseThreshold" Execute="SystemChase"/>

        <!-- 추격 러시 -->
        <Branch Condition="TargetExists && 
                           (gv_najimiRushRange >= TargetDistance) && 
                           (GraphExecutedTime > gv_najimiRushTrasitionTime)" Execute="ChaseRushReady"/>
    </Chase>

    <SystemChase Package="CommonSystemChasePackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </SystemChase>
    
    <DashRushReady Package="ReitoAttackReadyPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <Branch Condition="CurrentPackageEnd" Execute="DashRush"/>
    </DashRushReady>
    
    <DashRush Package="ReitoLinearDashPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <Branch Condition="(gv_najimiRushRange >= TargetDistance)" Execute="ChaseRushReady"/>
        <Branch Condition="CurrentPackageEnd" Execute="ChaseRushReady"/>
    </DashRush>

    <RushReady Package="ReitoAttackReadyPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <Branch Condition="CurrentPackageEnd" Execute="Rush"/>
    </RushReady>
    
    <ChaseRushReady Package="ReitoChaseAttackReadyPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <Branch Condition="CurrentPackageEnd" Execute="Rush"/>
    </ChaseRushReady>

    <Rush Package="ReitoPunchPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </Rush>

    <SpawnPitchingMachine Package="ReitoSpwanGauntletPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </SpawnPitchingMachine>

    <Pitching Package="ReitoCremationBeamPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>        
    </Pitching>

    <GuardBroken Package="CommonGuardBrokenPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </GuardBroken>

    <Hit Package="CommonHitPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <UseBranchSet Name="HitReactionSet"/>
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </Hit>

    <Groggy Package="CommonGroggyPackage">
        <UseBranchSet Name="IsPlayerDead"/>
        <!-- <UseBranchSet Name="HitReactionSet"/> -->
        <Branch Condition="CurrentPackageEnd" Execute="Entry"/>
    </Groggy>

    <Dead Package="CommonDeadPackage">
    </Dead>

    <EnemyWin Package="CommonIdlePackage">
        <Branch Condition="getTargetFrameTag_Dead == false" Execute="Entry_Battle"/>
    </EnemyWin>

</AIGraph>